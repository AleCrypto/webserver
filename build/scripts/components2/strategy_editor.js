define(["lib/react","../strategies","../lib/lodash","../lib/clib"],function(e,t,n,r){var i=e.DOM;return e.createClass({displayName:"strategyEditor",propTypes:{engine:e.PropTypes.object.isRequired,strategyController:e.PropTypes.object.isRequired},getInitialState:function(){return this.controller=this.props.strategyController,this.controller.getState()},componentDidMount:function(){this.controller.on("change",this.onChange)},componentWillUnmount:function(){this.controller.off("change",this.onChange)},onChange:function(){this.setState(this.controller.getState())},runStrategy:function(){this.props.strategyController.runStrategy(this.state.script,this.stopStrategy),this.controller.setActive(!0)},stopStrategy:function(){this.controller.stopScript(),this.isMounted()&&this.controller.setActive(!1)},updateScript:function(){var e=this.refs.input.getDOMNode().value;this.controller.updateScript(e)},selectStrategy:function(){var e=this.refs.strategies.getDOMNode().value;this.controller.selectStrategy(e)},render:function(){var e=this,s=n.map(t,function(e,t){return i.option({value:t,key:"strategy_"+t},r.capitaliseFirstLetter(t))});return i.div({className:"strategy-container"},i.textarea({className:"strategy-input",ref:"input",value:e.state.script,onChange:e.updateScript,disabled:this.state.active}),i.button({className:"strategy-start",onClick:e.runStrategy,disabled:this.state.active},"RUN!"),i.button({className:"strategy-stop",onClick:e.stopStrategy,disabled:!this.state.active},"STOP"),i.select({className:"strategy-select",value:this.state.selectedStrategy,onChange:e.selectStrategy,ref:"strategies",disabled:this.state.active},s))}})});