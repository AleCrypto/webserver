define(["lib/react","strategies/strategies","lib/lodash","lib/clib"],function(e,t,n,r){var i=e.DOM;return e.createClass({displayName:"strategyEditor",propTypes:{engine:e.PropTypes.object.isRequired,strategyController:e.PropTypes.object.isRequired},controller:function(){return this.props.strategyController},getState:function(){var e=this.controller().getState();return e.invalidData=this.controller().dataInvalid(),e},getInitialState:function(){return this.getState()},componentDidMount:function(){this.controller().on("change",this.onChange)},componentWillUnmount:function(){this.controller().off("change",this.onChange)},onChange:function(){this.setState(this.getState())},runStrategy:function(){this.controller().runStrategy()},stopStrategy:function(){this.controller().stopScript()},updateScript:function(){var e=this.refs.input.getDOMNode().value;this.controller().updateScript(e)},selectStrategy:function(){var e=this.refs.strategies.getDOMNode().value;this.controller().selectStrategy(e)},render:function(){var e=this,s=n.map(t,function(e,t){return i.option({value:t,key:"strategy_"+t},r.capitaliseFirstLetter(t))});return i.div({className:"strategy-container"},typeof this.state.strategy=="function"?this.state.strategy({strategyController:this.props.strategyController}):i.textarea({className:"strategy-input",ref:"input",value:e.state.strategy,onChange:e.updateScript,disabled:this.state.active}),i.button({className:"strategy-start",onClick:e.runStrategy,disabled:this.state.active||this.state.invalidData},"RUN!"),i.button({className:"strategy-stop",onClick:e.stopStrategy,disabled:!this.state.active},"STOP"),i.select({className:"strategy-select",value:this.state.selectedStrategy,onChange:e.selectStrategy,ref:"strategies",disabled:this.state.active},s),i.span({className:"strategy-invalid-data"},this.state.invalidData))}})});